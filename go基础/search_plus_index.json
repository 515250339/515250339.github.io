{"./":{"url":"./","title":"前言","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 前言 前言 这是《goland初级》的相关教程 Copyright © xxxx.com 2021 all right reserved，powered by Gitbook该文件修订时间: 2021-06-16 23:35:33 "},"go基础知识/":{"url":"go基础知识/","title":"一、go基础知识","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 安装go语言 一、官网下载安装包 https://golang.google.cn/dl/ 二、下载完成后 一直下一步 安装完成 三、配置环境变量 此电脑-右击-属性-高级系统设置-环境变量 四、打开cmd 测试 输入go env 出现相似则为成功 安装go语言 一、官网下载安装包 https://golang.google.cn/dl/ 二、下载完成后 一直下一步 安装完成 三、配置环境变量 此电脑-右击-属性-高级系统设置-环境变量 四、打开cmd 测试 输入go env 出现相似则为成功 Copyright © xxxx.com 2021 all right reserved，powered by Gitbook该文件修订时间: 2021-06-17 21:29:04 "},"go基础知识/go概述.html":{"url":"go基础知识/go概述.html","title":"1.1 go概述","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 一、go发展背景 二、Go 语言产生的背景 三、Go 语言的适用场景 四、Go 语言的特点 1.1 go概述(了解) 一、go发展背景 ​ Go 语言起源2007 年，并于2009 年正式对外发布。 它从2009 年9 月21 日开始作为谷歌公司20% 兼职项目，即相关员工利用20% 的空余时间来参与Go 语言的研发工作。 ... 自2008 年1 月起，Ken Thompson 就开始研发一款以C 语言为目标结果的编译器来拓展Go 语言的设计思想。 ​ Go（有时也被称为：Golang）是一门新兴的程序设计语言，诞生于 2007 年，并于 2009 年正式对外发布。Go 是一门开源的程序设计语言，其初衷是为了让开发者可以更为方便地开发简单、可靠、高效的应用软件。Go 是一门静态类型编译型语言，静态类型意味着变量类型需要显式声明并在编译时刻确定，编译型语言则意味着程序执行前需要将源代码编译为平台相关的二进制机器码。Go 项目的领导者是三位鼎鼎大名的 IT 工程师：Robert Griesemer，Rob Pike，Ken Thompson。 Robert Griesemer：参与开发 Java HotSpot 虚拟机。 Rob Pike：贝尔实验室 Unix 团队成员，参与开发 Plan 9 操作系统和 Limbo 语言。 Ken Thompson：贝尔实验室 Unix 团队成员，C 语言、Unix 和 Plan 9 操作系统创始人之一，与 Rob Pike 共同开发了 UTF-8 字符集规范。 Go 首次公开发布是在 2009 年，以 BSD 许可证开放源代码释出，支持 Unix、Linux、MacOS 平台，同年也增加了对 Windows 平台的支持。Go 1.0（首个生产可用版）于 2012 年 3 月发布，如今，Go 语言已经迭代到了 1.15 版本（2020 年 8 月），而 Go 2.0 也正在路上！ 二、Go 语言产生的背景 C/C++ 的发展速度没有跟上计算机发展的脚步，十多年来也没有出现一门与时代相符的主流系统编程语言。为了解决这一问题，Google 开发了一门新的编程语言 – Go 。 Google 当时的现状： 项目中主要使用C++，也有 Java 和 Python 开发人员众多 代码量大 分布式编译 服务器数量达百万级别 Google 当时面临的问题： 编译慢 依赖复杂 每个工程师只用了一个语言的一部分特性 代码难以维护，可读性差，文档不清晰 变更功能的成本越来越大 交叉编译困难 Google 设计 Go 的初衷是为了消除各种缓慢和笨重、改进各种低效和扩展。Go 主要面向的是开发大型系统的人，强调解决工程问题。 2007 年 Google 发起 Go 项目，2009 年开源项目，2012 年发布第一个正式版本，之后每半年一个版本。在 Google 内部，一开始 Go 作为一个 20% 的项目运作，也就是员工利用 20% 的空余时间来参与开发。 Go 项目的三位主要领导者对系统编程语言、操作系统和并行都有着深刻理解： Rob Pike，Unix、UTF-8、Plan9 的作者 Ken Thompson，B语言、C语言的作者、Unix之父。 Robert Griesemer，参与开发 JavaScript 执行引擎 V8，Java HotSpot 虚拟机等。 这样强大的创始团队阵容，再加上 Google 制造的光环 ，给 Go 项目带来了极高的人气。 三、Go 语言的适用场景 Go 适用的一些场景： 服务器编程，处理日志、数据打包、虚拟机处理、文件系统等 分布式系统，数据库代理、中间件等 网络编程，Web 应用、API 应用、下载应用、游戏后端等 海量存储，Influxdb、Tidb 等 云平台，CloudFoundry 等 使用 Go 的国外公司有 Google、Docker、Apple、Cloud Foundry、CloudFlare、Couchbase、CoreOS、Dropbox、MongoDB、AWS 等。 使用 Go 的国内公司有头条、阿里云 CDN、百度、小米、七牛、PingCAP、华为、金山软件、猎豹移动、饿了么等。 四、Go 语言的特点 Go，又称 Golang，是 Google 开发的一种静态强类型、编译型，并发型，并具有垃圾回收功能的编程语言。Google 的很多工程师都是 C 系的，所以 Go 和 C++、Java 、C# 一样属于 C 系。 在声明和包的设计方面，Go 受到 Pascal、Modula 和 Oberon 系语言的影响；在并发原理的设计上，Go 从同样受到 Tony Hoare 的通信序列进程 CSP 理论影响的 Limbo 和 Newsqueak 的实践中借鉴了一些经验，并使用了和 Erlang 类似的机制。 Go 语言的优点： 部署简单，编译之后是一个静态可执行文件，除了 glibc ，没有其他外部依赖 并发性好，Goroutine 和 Channel 从语言层面支持并发，编写高并发的应用不需要考虑锁机制，以及由此带来的各种问题 良好的语言设计，自带完善的工具链，例如 gofmt 可自动排版代码 执行性能良好，适合编写瓶颈业务，非常节省内存 丰富的标准库，内置大量的库，可以直接使用 Copyright © xxxx.com 2021 all right reserved，powered by Gitbook该文件修订时间: 2021-06-17 22:11:14 "},"go基础知识/第一个go程序.html":{"url":"go基础知识/第一个go程序.html","title":"1.2 第一个goland程序","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 简介： 使用Goland编写第一个go程序 编写一个程序，输出\"hello,Golang\" 直接 go run 来运行 两种执行流程的方式区别 Go 程序开发的注意事项 编译命令 运行程序流程 1.2 第一个go程序 简介： Go 语言保证了既能到达静态编译语言的安全和性能，又达到了动态语言开发维护的高效率 ，使用一个表达式来形容 Go 语言：Go = C + Python , 说明 Go 语言既有 C 静态语言程 序的运行速度，又能达到 Python 动态语言的快速开发。 1) 从 C 语言中继承了很多理念，包括表达式语法，控制结构，基础数据类型，调用参数传值，指针等 等，也保留了和 C 语言一样的编译执行方式及弱化的指针 举一个案例(体验)： //go 语言的指针的使用特点(体验) func testPtr(num *int) { *num = 20 } 2) 引入包的概念，用于组织程序结构，Go 语言的一个文件都要归属于一个包，而不能单独存在。 3) 垃圾回收机制，内存自动回收，不需开发人员管理 4) 天然并发 (重要特点) (1) 从语言层面支持并发，实现简单 (2) goroutine，轻量级线程，可实现大并发处理，高效利用多核。 (3) 基于 CPS 并发模型(Communicating Sequential Processes )实现 5) 吸收了管道通信机制，形成 Go 语言特有的管道 channel 通过管道 channel , 可以实现不同的 goroute 之间的相互通信。 6) 函数可以返回多个值。举例： //**写一个函数，实现同时返回 和，差** //go 函数支持返回多个值 func getSumAndSub(n1 int, n2 int) (int, int ) { sum := n1 + n2 //go 语句后面不要带分号**.** sub := n1 - n2 return sum , sub } 7) 新的创新：比如切片 slice、延时执行 defer 使用Goland编写第一个go程序 安装go环境 打开Goland进行新建一个项目 目录结构为 (1) go 文件的后缀是 .go (2) package main 表示该 hello.go 文件所在的包是 main, 在 go 中，每个文件都必须归属于一个包。 (3) import “fmt” 表示：引入一个包，包名 fmt, 引入该包后，就可以使用 fmt 包的函数，比如：fmt.Println (4) func main() { } func 是一个关键字，表示一个函数。 main 是函数名，是一个主函数，即我们程序的入口。 (5) fmt.Println(“hello”) 表示调用 fmt 包的函数 Println 输出 “hello,world” 编写一个程序，输出\"hello,Golang\" package main import \"fmt\" func main() { fmt.Println(\"hello,Golang\") } 通过 go build 命令对该 go 文件进行编译，生成 .exe 文件. 1) 运行 hello.exe 文件即可 2) 注意：通过 go run 命令可以直接运行 hello.go 程序 [类似执行一个脚本文件的形式] package main // 包名称 也就是你最后一个目录（包）的名称 import \"fmt\" // 导入所用的包 // main 指的是函数名称 也是程序入口 func main() { fmt.Print(\"Hello Word\") // 正常输出 fmt.Println(\"Hello Word\") // 输出一次一行 } // 执行命令 go run 文件名.go 一般用于调试 // 执行命令 go build 文件名.go 会输出一个 .exe文件 // 执行命令 go build 文件名.go 会输出一个 .exe文件 直接 go run 来运行 go run 如果是对源码编译后，再执行，Go 的执行流程如下图 如果我们是对源码直接 执行 go run 源码，Go 的执行流程如下图 两种执行流程的方式区别 1) 如果我们先编译生成了可执行文件，那么我们可以将该可执行文件拷贝到没有 go 开发环境的机 器上，仍然可以运行 2) 如果我们是直接 go run go 源代码，那么如果要在另外一个机器上这么运行，也需要 go 开发 环境，否则无法执行。 3) 在编译时，编译器会将程序运行依赖的库文件包含在可执行文件中，所以，可执行文件变大了 很多。 Go 程序开发的注意事项 1) Go 源文件以 \"go\" 为扩展名。 2) Go 应用程序的执行入口是 main()函数。 这个是和其它编程语言（比如 java/c） 3) Go 语言严格区分大小写。 4) Go 方法由一条条语句构成，每个语句后不需要分号(Go 语言会在每行后自动加分号)，这也体尚硅谷 Go 语言课程 更多 Java –大数据 –前端 –python 人工智能 -区块链资料下载，可访问百度：尚硅谷官网 第 29页 现出 Golang 的简洁性。 5) Go 编译器是一行行进行编译的，因此我们一行就写一条语句，不能把多条语句写在同一个，否 则报错 6) go 语言定义的变量或者 import 的包如果没有使用到，代码不能编译通过。 7) 大括号都是成对出现的，缺一不可。 编译命令 E:\\go\\代码\\Project\\基础\\hello_word\\main>go run hello_word.go Hello WordHello Word Hello Word E:\\go\\代码\\Project\\基础\\hello_word\\main>go build E:\\go\\代码\\Project\\基础\\hello_word\\main>dir 驱动器 E 中的卷是 study 卷的序列号是 DCA4-4E82 E:\\go\\代码\\Project\\基础\\hello_word\\main 的目录 2021/05/31 23:10 . 2021/05/31 23:10 .. 2021/05/31 23:09 480 hello_word.go 2021/05/31 23:10 2,144,256 main.exe 2 个文件 2,144,736 字节 2 个目录 108,196,679,680 可用字节 E:\\go\\代码\\Project\\基础\\hello_word\\main>go build hello_word.go E:\\go\\代码\\Project\\基础\\hello_word\\main>dir 驱动器 E 中的卷是 study 卷的序列号是 DCA4-4E82 E:\\go\\代码\\Project\\基础\\hello_word\\main 的目录 2021/05/31 23:10 . 2021/05/31 23:10 .. 2021/05/31 23:10 2,144,256 hello_word.exe 2021/05/31 23:09 480 hello_word.go 2021/05/31 23:10 2,144,256 main.exe 3 个文件 4,288,992 字节 2 个目录 108,194,533,376 可用字节 E:\\go\\代码\\Project\\基础\\hello_word\\main>go build -o hello hello_word.go E:\\go\\代码\\Project\\基础\\hello_word\\main>dir 驱动器 E 中的卷是 study 卷的序列号是 DCA4-4E82 E:\\go\\代码\\Project\\基础\\hello_word\\main 的目录 2021/05/31 23:11 . 2021/05/31 23:11 .. 2021/05/31 23:11 2,144,256 hello 2021/05/31 23:10 2,144,256 hello_word.exe 2021/05/31 23:09 480 hello_word.go 2021/05/31 23:10 2,144,256 main.exe 4 个文件 6,433,248 字节 2 个目录 108,192,387,072 可用字节 运行程序流程 Copyright © xxxx.com 2021 all right reserved，powered by Gitbook该文件修订时间: 2021-06-17 22:27:03 "},"go基础知识/代码规范&转义符.html":{"url":"go基础知识/代码规范&转义符.html","title":"1.3 代码规范&转义符","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 说明:常用的转义字符有如下 规范的代码风格 Go 规范的代码风格&语言的转义字符(escape char) 说明:常用的转义字符有如下 1) \\t : 表示一个制表符，通常使用它可以排版。尚硅谷 Go 语言课程 2) \\n ：换行符 3) \\ ：一个\\ 4) \\\" ：一个\" 5) \\r ：一个回车 fmt.Println(\"天龙八部雪山飞狐\\r 张飞\"); 6) 案例截图 规范的代码风格 2.12.1 正确的注释和注释风格： 1) Go 官方推荐使用行注释来注释整个方法和语句。 2) 带看 Go 源码 2.12.2 正确的缩进和空白 1) 使用一次 tab 操作，实现缩进,默认整体向右边移动，时候用 shift+tab 整体向左移 看老师的演示： 2) 或者使用 gofmt 来进行格式化 [演示] 3) 运算符两边习惯性各加一个空格。比如：2 + 4 * 5。 4) Go 语言的代码风格. package main import \"fmt\" func main() { fmt.Println(\"hello,world!\") } 上面的写法是正确的. package main import \"fmt\" func main() { fmt.Println(\"hello,world!\") } 上面的写法不是正确，Go 语言不允许这样编写。 【Go 语言不允许这样写，是错误的！】 Go 设计者思想: 一个问题尽量只有一个解决方法 5) 一行最长不超过 80 个字符，超过的请使用换行展示，尽量保持格式优雅 举例说明 Copyright © xxxx.com 2021 all right reserved，powered by Gitbook该文件修订时间: 2021-06-17 22:35:45 "},"go基础知识/注释.html":{"url":"go基础知识/注释.html","title":"1.4 注释","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 介绍注释 1.3 注释(comment) 介绍注释 用于注解说明解释程序的文字就是注释，注释提高了代码的阅读性； 注释是一个程序员必须要具有的良好编程习惯。将自己的思想通过注释先整理出来，再用代码去 体现。 2.11.2 在 Golang 中注释有两种形式 1) 行注释 基本语法 // 注释内容 举例 2) 块注释(多行注释) 基本语法 /* 注释内容 */ 举例说明 使用细节 1) 对于行注释和块注释，被注释的文字，不会被 Go 编译器执行。 2) 块注释里面不允许有块注释嵌套 [注意一下] Copyright © xxxx.com 2021 all right reserved，powered by Gitbook该文件修订时间: 2021-06-17 22:18:08 "},"go基础知识/Golang官方编程指南.html":{"url":"go基础知识/Golang官方编程指南.html","title":"1.5 Golang 官方编程指南 ","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 Golang 标准库 API 文档 Golang 官方编程指南 说明： Golang 官方网站 https://golang.org 点击上图的 tour -> 选择 简体中文就可以进入中文版的 Go 编程指南 。 Golang 官方标准库 API 文档， https://golang.org/pkg 可以查看 Golang 所有包下的函数和使用 解释术语：API api ： application program interface :应用程序编程接口。 就是我们 Go 的各个包的各个函数。 Golang 标准库 API 文档 1) API （Application Programming Interface,应用程序编程接口）是 Golang 提供的基本编程接口。 2) Go 语言提供了大量的标准库，因此 google 公司 也为这些标准库提供了相应的 API 文档，用于告 诉开发者如何使用这些标准库，以及标准库包含的方法。 3) Golang 中文网 在线标准库文档： https://studygolang.com/pkgdoc 4) Golang 的包和源文件和函数的关系简图 5) 有一个离线版的 Golang_Manual_By_AstaXie_20120522.chm Copyright © xxxx.com 2021 all right reserved，powered by Gitbook该文件修订时间: 2021-06-17 22:31:14 "},"go变量以及基础数据类型/":{"url":"go变量以及基础数据类型/","title":"二、go变量以及基础数据类型","keywords":"","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42 Introduction Introduction Copyright © xxxx.com 2021 all right reserved，powered by Gitbook该文件修订时间: 2021-06-17 22:43:29 "}}